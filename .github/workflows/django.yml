name: Django CI/CD

on:
  push:
    branches: [master]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python3 -m venv ./env
          source env/bin/activate
          pip install --upgrade -r requirements.txt

  deploy:
    needs: build
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI on EC2
        run: |
          # sudo apt-get update
          # sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          # unzip awscliv2.zip
          # sudo ./aws/install
          # #sudo apt-get install -y awscli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
          audience: sts.amazonaws.com


      - name: Deploy Django project
        run: |
          cd /home/ubuntu/actions-runner/_work/NCS_folder/NCS_folder
          python manage.py runserver 0.0.0.0:8000 &

          
# name: Django CI/CD

# on:
#   push:
#     branches: [master]
#   # pull_request:
#   #   branches: [master]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [3.x]

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v3
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install Dependencies
#         run: |
#           python3 -m venv ./env
#           source env/bin/activate
#           pip install --upgrade -r requirements.txt

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       # Add deployment steps here
#       - name: Deploy to Production
#         run: |
#           # Example deployment command, replace with your actual deployment script or commands
#           echo "Deploying to production..."
#           # Your deployment commands here


